name: Release

on:
  workflow_dispatch:
    inputs:
      release_type:
        description: "Type of release: major, minor, patch"
        required: true
        default: "patch"

concurrency:
  group: release
  cancel-in-progress: true

jobs:
  test:
    name: Tests
    uses: ./.github/workflows/test.yml
  create-tag:
    needs: test
    name: Create tag
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Generate new release tag
        id: generate-tag
        run: |
          version=$(grep 'version: ' mix.exs)
          version=${version#*\"}
          version=${version//\",}
          IFS=. read major minor patch <<< "$version"
          echo "Last version: $major.$minor.$patch"

          # Increment version
          if [ "${{ inputs.release_type }}" = "major" ]; then
            major=$((major + 1))
            minor=0
            patch=0
          elif [ "${{ inputs.release_type }}" = "minor" ]; then
            minor=$((minor + 1))
            patch=0
          else
            patch=$((patch + 1))
          fi

          new_version="$major.$minor.$patch"
          echo "New version: $new_version"
          echo "tag_version=$new_version" >> $GITHUB_OUTPUT
      - name: Commit and tag
        run: |
          # Get version from previous step
          tag_version=${{ steps.generate-tag.outputs.tag_version }}

          # If version is not set, or is not a valid semver, exit
          if [ -z "$tag_version" ] || ! [[ $tag_version =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
            echo "Invalid version: $tag_version"
            exit 1
          fi

          # Replace version in mix.exs
          sed -i "s/version: \".*\"/version: \"$tag_version\"/" mix.exs

          # Commit and tag
          git config --local user.email "actions@github.com"
          git config --local user.name "GitHub Actions"
          git add mix.exs
          git commit -m "release: Bump version to $tag_version"
          commit_hash=$(git rev-parse HEAD)

          date_tag=$(date +%Y%m%d)
          git tag v$date_tag-$tag_version $commit_hash
          git push
          git push --tags
  release:
    needs: create-tag
    name: Release
    runs-on: self-hosted
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Build for production
        run: LFM_TOKEN=${{ secrets.LFM_TOKEN }} PORT=3000 make release
      - name: Run release
        run: PORT=3000 make run
